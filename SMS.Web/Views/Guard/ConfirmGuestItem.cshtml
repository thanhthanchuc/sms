@model SMS.Models.EF.Guest
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="form-horizontal">
    <div class="card-header py-3">
        <h5 class="m-0 font-weight-bold text-primary">BẢO VỆ XÁC NHẬN KHÁCH MANG HÀNG VÀO - RA</h5>
    </div>
    <!--Cột bên trái dành cho form đăng ký-->
    <div class="col-md-12 row-form">
        <div class="column form-horizontal form-left col-md-6">
            <div class="form-group row-1 input-group">
                <label class="control-label col-md-3 top-space lb">Mã CNV <span class="red">(*)</span></label>
                <div class="col-md-7 input-group">
                    <div class="top-space">
                        <input type="hidden" id="gid" value="@Model.ID" />
                        @Html.TextBoxFor(model => model.EmployeeID, new { @id = "txtEmpCodeBI", @class = "form-control input-previous-button col-md-12", @readonly = "readonly" })
                    </div>
                    &nbsp;
                    &nbsp;
                    <label id="info-BI-create" class="btn-primary btn btn-get-info top-space" title="Xem thông tin CNV" style="cursor: pointer">
                        <i class="fas fa-user"></i>&nbsp; Thông tin CNV
                    </label>
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">Khách <span class="red">(*)</span></label>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Type, new { @id = "txtEmpCodeBI", @class = "form-control input-previous-button col-md-12", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">Số thẻ khách</label>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.KVPNo, new { @id = "txtEmpCodeBI", @class = "form-control input-previous-button col-md-12", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">Họ tên khách <span class="red">(*)</span></label>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.FullName, new { @id = "txtEmpCodeBI", @class = "form-control input-previous-button col-md-12", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">CMTND/Hộ chiếu</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.IDCard, new { @id = "txtEmpCodeBI", @class = "form-control input-previous-button col-md-12", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">Visa</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Visa, new { @id = "txtEmpCodeBI", @class = "form-control input-previous-button col-md-12", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">Nơi ở hiện tại</label>
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.Hotel, new { @id = "txtEmpCodeBI", @class = "form-control input-previous-button col-md-12", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">Công ty <span class="red">(*)</span></label>
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.Company, new { @id = "txtEmpCodeBI", @class = "form-control input-previous-button col-md-12", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">Số người <span class="red">(*)</span></label>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.NumbersOfPerson, new { @id = "txtEmpCodeBI", @class = "form-control input-previous-button col-md-12", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3">Lý do <span class="red">(*)</span></label>
                <div class="col-md-9">
                    <textarea readonly class="form-control col-md-12" style="resize: none"></textarea>
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">Số xe</label>
                <div class="col-md-9">
                    <input readonly class="form-control input-previous-button" />
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">Giờ đăng ký vào <span class="red">(*)</span></label>
                <div class="col-md-4">
                    <input readonly class="form-control input-previous-button" id="estimated_date_in" />
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-3 top-space">Giờ đăng ký ra <span class="red">(*)</span></label>
                <div class="col-md-4">
                    <input readonly class="form-control input-previous-button" id="estimated_date_out" />
                </div>
            </div>
        </div>

        <div class="column col-md-2 col-mid">
            <i class=" fas fa-play"></i>
        </div>


        <!--Cột bên phải dành cho thông tin nhân viên-->
        <div class="column form-horizontal form-right col-md-4">
            <!--Ảnh profile-->
            <div class="form-group col-12 profile-img">
                <div class="img-profile">
                    <img src="~/Assets/img/the-world.jpg" />
                </div>
            </div>
            <!--Thông tin profile-->
            <div class="form-group input-group profile">
                <label class="control-label col-md-3">Họ và tên <span class="red">(*)</span></label>
                <input readonly class="form-control input-previous-button col-9 txtFullNameBI" />
                @*@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control input-previous-button col-9 txtFullNameBI" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger info-required" })*@
            </div>
            <div class="form-group input-group profile">
                <label class="control-label col-md-3">Vị trí <span class="red">(*)</span></label>
                <input readonly class="form-control input-previous-button col-9 txtPositionBI" />
                @*@Html.EditorFor(model => model.Position, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control input-previous-button col-9 txtPositionBI" } })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger info-required" })*@
            </div>
            <div class="form-group input-group profile">
                <label class="control-label col-md-3">Phòng ban <span class="red">(*)</span></label>
                <input readonly class="form-control input-previous-button col-9 txtTeamBI" />
                @*@Html.EditorFor(model => model.Team, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control input-previous-button col-9 txtTeamBI" } })
                    @Html.ValidationMessageFor(model => model.Team, "", new { @class = "text-danger info-required" })*@
            </div>
        </div>
    </div>
</div>
<br />
<div class="note col-12">
    <span class="control-label" style="color: dodgerblue"><u>Lưu ý</u>: <span style="color: #858796">&nbsp;Các trường <span style="color:red">(*)</span> bắt buộc phải nhập đầy đủ.</span></span>
</div>
<br />
<div class="bottom">
    <div style="width:100%; overflow-x:auto">
        <!--Bảng dữ liệu Về sớm-->
        <table class="table table-hover table-bordered" id="LE-table">
            <!--Tiêu đề cột-->
            <thead>
                <tr class="table-heading">
                    <th>Tên tài sản</th>
                    <th>Số serial</th>
                    <th>Số lượng</th>
                    <th>Đơn vị</th>
                    <th>Loại hàng hóa</th>
                    <th colspan="2">Thời gian đem trở ra</th>
                    <th colspan="2">Người đăng ký</th>
                    <th colspan="4">ITT phê duyệt</th>
                    <th colspan="4">FST phê duyệt</th>
                    <th colspan="4">Bảo vệ xác nhận mang vào</th>
                    <th colspan="4">Bảo vệ xác nhận mang ra</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Guest_Item)
                {
                    <tr>
                        <td>@item.Item</td>
                        <td>@item.Serial</td>
                        <td>@item.Quantity</td>
                        <td>@item.Unit</td>
                        <td>
                            @if (@item.AssetType == 0)
                            {
                                <span>Hàng thường</span>
                            }
                            else if (item.AssetType == 1)
                            {
                                <span>Hàng IT</span>
                            }
                            else
                            {
                                <span>Hàng độc hại</span>
                            }
                        </td>
                        <td>
                            @if (@item.IsReturn == true)
                            {
                                <i class="fas fa-check-square" style="color: dodgerblue"></i>
                            }
                            else
                            {
                                <i class="fas fa-times" style="color: red"></i>
                            }
                        </td>
                        <td>@item.ReturnTime</td>
                        <td>@item.ITT</td>
                        <td>@item.ITT_Status</td>
                        <td>@item.ITT_Remark</td>
                        <td>@item.ITT_Date</td>
                        <td>@item.FST</td>
                        <td>@item.FST_Status</td>
                        <td>@item.FST_Remark</td>
                        <td>@item.FST_Date</td>
                        <td>@item.GuardIn</td>
                        <td>
                            @if (@item.GuardStatusIn == null)
                            {
                                <a data-id="" class="btn btn-primary btn-standard btn-admin-approve-LE" href="#" title="Phê duyệt" onclick="handleApproveIn(@item.ID)"><i class="fas fa-check" style="margin-left: -4px"></i></a>
                                <a data-id="" class="btn btn-danger btn-standard btn-admin-reject-LE" href="#" title="Không phê duyệt" onclick="handleUnapproveIn(@item.ID)"><i class="fas fa-times" style="margin-left: -2.5px"></i></a>
                            }
                            else if (@item.GuardStatusIn == 1)
                            {
                                <i class="fas fa-check"></i>
                            }
                            else
                            {
                                <i class="fas fa-times"></i>
                            }
                        </td>
                        <td><input class="remark-@item.ID-in remark col-12" type="text" placeholder="Ghi chú..." value="@item.GuardRemarkOut" disabled="@(item.GuardStatusOut != null)" /></td>
                        <td>@item.GuardDateIn</td>
                        <td>@item.GuardOut</td>
                        <td>
                            @if (@item.GuardStatusOut == null)
                            {
                                <a data-id="" class="btn btn-primary btn-standard btn-admin-approve-LE" href="#" title="Phê duyệt" onclick="handleApproveOut(@item.ID)"><i class="fas fa-check" style="margin-left: -4px"></i></a>
                                <a data-id="" class="btn btn-danger btn-standard btn-admin-reject-LE" href="#" title="Không phê duyệt" onclick="handleUnapproveOut(@item.ID)"><i class="fas fa-times" style="margin-left: -2.5px"></i></a>
                            }
                            else if (@item.GuardStatusOut == 1)
                            {
                                <i class="fas fa-check"></i>
                            }
                            else
                            {
                                <i class="fas fa-times"></i>
                            }

                        </td>
                        <td><input class="remark-@item.ID-out remark col-12" type="text" placeholder="Ghi chú..." value="@item.GuardRemarkOut" disabled="@(item.GuardStatusOut != null)" /></td>
                        <td>@item.GuardDateOut</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div style="text-align: center">
        <label id="add-row-items" class="btn-cancel btn top-space" title="Trở lại" style="cursor: pointer">
            <i class="fas fa-arrow-left"></i>&nbsp; Trở lại
        </label>
    </div>
</div>

@section scripts{
    <script src="~/Assets/js/jquery-confirm.js"></script>
    <script src="~/Assets/js/utils.js"></script>
    <script>
        $('#return-queue').on("click", () => {
            window.location.href = "/Guard/Queue"
        })

        function handleApproveIn(itemId) {
            var remarkId = "." + "remark" + "-" + itemId + "-" + "in"
            handleAPI("/Guard/ApproveGuestItemIn", {
                id: $("#gid").val(),
                itemId,
                remark: $(remarkId).val(),
                status: 1
            }, true)
        }

        function handleUnapproveIn(itemId) {
            var remarkId = "." + "remark" + "-" + itemId + "-" + "in"
            handleAPI("/Guard/ApproveGuestItemIn", {
                id: $("#gid").val(),
                itemId,
                remark: $(remarkId).val(),
                status: 0
            }, true)
        }

        function handleApproveOut(itemId) {
            var remarkId = "." + "remark" + "-" + itemId + "-" + "out"
            handleAPI("/Guard/ApproveGuestItemOut", {
                id: $("#gid").val(),
                itemId,
                remark: $(remarkId).val(),
                status: 1,
            })
        }

        function handleUnapproveOut(itemId) {
            var remarkId = "." + "remark" + "-" + itemId + "-" + "out"
            handleAPI("/Guard/ApproveGuestItemOut", {
                id: $("#gid").val(),
                itemId,
                remark: $(remarkId).val(),
                status: 0,
            })
        }
    </script>
}

